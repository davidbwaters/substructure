/*
 *  Elements - Headings
 */

// Text elements based on core settings.


@use 'sass:map';
@use 'sass:list';
@use 'node_modules/@substructure/settings';
@use 'node_modules/@substructure/tools';


$text-sizes-large: settings.$text-sizes-large !default;
$text-sizes-small: settings.$text-sizes-small !default;


$_text-sizes-large-length: list.length( 
  map.keys( $text-sizes-large )
);

$_text-sizes-small-length: list.length( 
  map.keys( $text-sizes-small )
);

$_heading-sizes: ();


@each $size-name, $size-value in $text-sizes-large {

  $i: list.index(
    map.keys(settings.$text-sizes-large), 
    $size-name
  );
  
  @if $i <= 6 {

    $_heading-sizes: list.append( $_heading-sizes, $size-value );

  }

}

@if $_text-sizes-large-length < 6 {

  @for $i from ( $_text-sizes-large-length + 1 ) through 6 {

    $_heading-sizes: list.append(
      $_heading-sizes,
      map.get(
        $text-sizes-large,
        list.nth( 
          map.keys( $text-sizes-large ),
          $_text-sizes-large-length
        )
      )
    )

  }

}

@for $i from 6 through 1 {

  @if $i < 4 {

    h#{$i} {

      @include tools.text-sizing( 

        list.nth( 
          $_heading-sizes, $i
        ),
        settings.$line-height-large

      )

    }

  }

  @else {

    h#{$i} {

      @include tools.text-sizing( 

        list.nth( 
          $_heading-sizes, $i
        )

      )

    }

  }

}

small {

  @include tools.text-sizing(

    map.get(

      $text-sizes-small,
      list.nth(
        map.keys( $text-sizes-small ),
        $_text-sizes-small-length
      )

    )

  )

}
