//
//  Settings - Core
//


@use 'sass:list';
@use 'sass:math';


// Enables responsive framework features.

$responsive: true !default;


// Defines the default breakpoints

$breakpoint-sizes: (
  tablet  :  768px,
  desktop : 1000px
) !default;

$breakpoints: () !default;

$breakpoints-max: () !default;

@each $bp-name, $bp-size in $breakpoint-sizes {
  
  $_bp-value: #{
    'screen and ( min-width: ' + $bp-size + ' )'
  };

  $_bp-value-max: #{
    'screen and ( max-width: ' + $bp-size + ' )'
  };

  $breakpoints: map.set(
    $breakpoints, $bp-name, $_bp-value
  );

  $breakpoints-max: map.set(
    $breakpoints-max, $bp-name, $_bp-value-max
  );

}


// Defines the default breakpoint separator.

$breakpoint-separator: \@ !default;


// Defines the root sizing for REM calculation.
// Set in pixels.

$sizing-root: 16px !default;


// Defines the default sizing unit.

$sizing-unit: .5rem !default;


// Defines the default sizing factors for sizing utilities.

$sizing-factors: (
  2, 3, 4, 6
) !default;


// Defines the default separator for sizing utilities.

$sizing-separator: \/ !default;


// Defines the default spacing sizes.

$spacing-sizes: (
  $sizing-unit * 2,
  $sizing-unit * 3,
  $sizing-unit * 4,
  $sizing-unit * 6,
  $sizing-unit * 8
) !default;


// Defines the default text size in pixels.

$text-size-normal: $sizing-root !default;


// Defines the default sizes for large text.
// Order from smallest to largest.

$text-sizes-large: (
  $text-size-normal * 1.2,
  $text-size-normal * math.pow(1.2, 2),
  $text-size-normal * math.pow(1.2, 3),
  $text-size-normal * math.pow(1.2, 4),
  $text-size-normal * math.pow(1.2, 5),
  $text-size-normal * math.pow(1.2, 6)
) !default;


// Defines the default sizes for small text.
// Order from largest to smallest.

$text-sizes-small: (
  $text-size-normal / 1.2,
  $text-size-normal / math.pow(1.2, 2)
) !default;


// Defines settings for fluid text scaling.
// Set to false to disable.

$text-sizing-fluid: (
  viewport-min: 320px,
  viewport-max: 1600px,
  scale-max: 1.25 / 1.2
) !default;


// Defines the default target line height as a unitless 
// value.

$line-height-normal: 1.5 !default;


// Defines the large text line height as a unitless value.

$line-height-large: 1.3 !default;


// Defines the default ITCSS layer namespaces.

$layer-namespaces: (
  objects    : 'o-',
  utilities  : 'u-',
  components : 'c-'
) !default;


// Defines custom properties to set in CSS.
// Set to false to disable.

$custom-properties: () !default;

@if $custom-properties != false {

  $custom-properties: (
    text-size-normal: $text-size-normal,
    line-height-normal: $line-height-normal,
    line-height-large:  $line-height-large
  );

  @each $value in $text-sizes-large {
    
    $_index: list.index(
      $text-sizes-large,
      $value
    );
    
    $custom-properties: map.set(
      $custom-properties,
      #{ 'text-sizes-large-' + $_index },
      $value
    )

  }

  @each $value in $text-sizes-small {
    
    $_index: list.index(
      $text-sizes-small,
      $value
    );
    
    $custom-properties: map.set(
      $custom-properties,
      #{ 'text-sizes-small-' + $_index },
      $value
    )

  }
  
  @each $key, $value in $layer-namespaces {
    
    $custom-properties: map.set(
      $custom-properties,
      #{ 'layer-namespace-' + $key },
      $value
    )

  }

  @if $text-sizing-fluid != false {
    
    @each $key, $value in $text-sizing-fluid {

      $custom-properties: map.set(
        $custom-properties,
        #{ 'text-sizing-fluid-' + $key },
        $value
      )
      
    }

  }

}

