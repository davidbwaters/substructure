/*
 *  Utilities - Spacing
 */

// Generate responsive spacing utility classes.

@use 'sass:list';
@use 'sass:map';
@use 'sass:string';
@use '../tools';
@use 'settings';



@if map.has-key(settings.$directions, horizontal) {
  $_margin-auto-class: #{map.get(settings.$namespaces, margin) +
    map.get(settings.$directions, horizontal) +
    'auto'};

  .#{ $_margin-auto-class } {
    margin-left: auto !important;
    margin-right: auto !important;
  }

  @if settings.$responsive {
    @each $breakpoint, $breakpoint-value in settings.$breakpoints {
      @include tools.respond-to($breakpoint, settings.$breakpoints) {
        .#{
          $_margin-auto-class
          + settings.$breakpoint-separator
          + $breakpoint
          } {
          margin-left: auto !important;
          margin-right: auto !important;
        }
      }
    }
  }
}

@each $direction, $direction-namespace in settings.$directions {
  @each $spacing-size-value in settings.$spacing-sizes {
    $_suffix: #{list.index(
        settings.$spacing-sizes,
        $spacing-size-value
      ) -
      1};

    $_margin-class: #{map.get(settings.$namespaces, margin) +
      $direction-namespace +
      $_suffix};

    .#{ $_margin-class } {
      @include tools.spacing(
        $direction,
        $spacing-size-value,
        margin,
        true
      );
    }

    @if settings.$responsive {
      @each $breakpoint, $breakpoint-value in settings.$breakpoints {
        @include tools.respond-to(
          $breakpoint,
          settings.$breakpoints
        ) {
          .#{
            $_margin-class
            + settings.$breakpoint-separator
            + $breakpoint
            } {
            @include tools.spacing(
              $direction,
              $spacing-size-value,
              margin,
              true
            );
          }
        }
      }
    }
  }
}

@each $direction, $direction-namespace in settings.$directions {
  @each $spacing-size-value in settings.$spacing-sizes {
    @if settings.$padding == true {
      $_suffix: #{list.index(
          settings.$spacing-sizes,
          $spacing-size-value
        ) -
        1};

      $_padding-class: #{map.get(settings.$namespaces, padding) +
        $direction-namespace +
        $_suffix};

      .#{$_padding-class} {
        @include tools.spacing(
          $direction,
          $spacing-size-value,
          padding,
          true
        );
      }

      @if settings.$responsive {
        @each $breakpoint, $breakpoint-value in settings.$breakpoints
        {
          @include tools.respond-to(
            $breakpoint,
            settings.$breakpoints
          ) {
            .#{
              $_padding-class
              + settings.$breakpoint-separator
              + $breakpoint
              } {
              @include tools.spacing(
                $direction,
                $spacing-size-value,
                padding,
                true
              );
            }
          }
        }
      }
    }
  }
}
