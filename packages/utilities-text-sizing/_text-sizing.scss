/*
 *  Utilities - Text Sizing
 */

@use 'sass:list';
@use 'sass:map';
@use '../settings';
@use '../tools';
@use '../utilities-spacing/settings' as spacing;

$text-size-normal-base: settings.$text-size-normal-base !default;

$text-sizes-large: settings.$text-sizes-large !default;

$text-sizes-small: settings.$text-sizes-small !default;

$line-height-normal: settings.$line-height-normal !default;

$line-height-large: settings.$line-height-large !default;

$namespaces: () !default;

$namespaces: map.merge(
  (
    normal: #{map.get(settings.$layer-namespaces, utilities) +
      'text-normal'},
    large: #{map.get(settings.$layer-namespaces, utilities) +
      'text-large-'},
    small: #{map.get(settings.$layer-namespaces, utilities) +
      'text-small-'}
  ),
  $namespaces
);

$_margin-0-class: #{'.' + map.get(spacing.$type-namespaces, margin) + 0};
$_margin-bottom-0-class: #{'.' + map.get(spacing.$type-namespaces, margin) + map.get(spacing.$direction-namespaces, bottom) + 0};

.#{ map.get( $namespaces, normal ) } {
  @if settings.$custom-properties {
    font-size: var(--text-size-normal-base) !important;

    @if settings.$sizing-fluid != false {
      font-size: var(--text-size-normal) !important;
    }
  } @else {
    font-size: $text-size-normal-base !important;

    @if settings.$sizing-fluid != false {
      font-size: $text-size-normal !important;
    }
  }
  line-height: $line-height-normal !important;
}

$_size-classes-large-combined: ();
$_size-classes-large-combined-0-margin: ();

@each $size-value in $text-sizes-large {
  $_length: list.length($text-sizes-large);

  $_index: list.index($text-sizes-large, $size-value);
  $_size-class: #{'.' + map.get($namespaces, large) + $_index};

  $_size-classes-large-combined: list.append(
    $_size-classes-large-combined,
    $_size-class,
    $separator: comma
  );

  $_size-classes-large-combined-0-margin: list.append(
    $_size-classes-large-combined-0-margin,
    #{$_size-class + $_margin-0-class + ',' $_size-class + $_margin-bottom-0-class},
    $separator: comma
  );

}

#{ $_size-classes-large-combined } {
  line-height: $line-height-large !important;

  @include tools.spacing(
    bottom,
    list.nth(settings.$spacing-sizes, 2),
    margin,
    true
  );
}

#{$_size-classes-large-combined-0-margin} {
  margin-bottom: 0 !important;
}

@each $size-value in $text-sizes-large {
  $_length: list.length($text-sizes-large);

  $_index: list.index($text-sizes-large, $size-value);

  .#{ map.get( $namespaces, large ) }#{ $_index} {
    @if settings.$custom-properties {
      font-size: var(
        --text-size-large-#{$_index}-base
      ) !important;
    } @else {
      font-size: $size-value !important;
    }

    @if settings.$sizing-fluid !=false {
      @if settings.$custom-properties {
        font-size: var(
          --text-size-large-#{$_index}
        ) !important;
      } @else {
        font-size: list.nth(
          $text-sizes-large-fluid,
          $_index
        ) !important;
      }
    }
  }
}

$_size-classes-small-combined: ();

$_size-classes-small-combined-0-margin: ();

@each $size-value in $text-sizes-small {
  $_index: list.index($text-sizes-small, $size-value);

  $_size-classes-small-combined: list.append(
    $_size-classes-small-combined,
    #{'.' + map.get($namespaces, small)}#{$_index},
    $separator: comma
  );

  $_size-class: #{'.' + map.get($namespaces, small) + $_index};

  $_size-classes-small-combined-0-margin: list.append(
    $_size-classes-large-combined-0-margin,
    #{$_size-class + $_margin-0-class + ',' $_size-class + $_margin-bottom-0-class},
    $separator: comma
  );
}

#{ $_size-classes-small-combined } {
  line-height: $line-height-normal !important;
}

#{$_size-classes-small-combined-0-margin} {
  margin-bottom: 0 !important;
}

@each $size-value in $text-sizes-small {
  $_index: list.index($text-sizes-small, $size-value);

  .#{ map.get( $namespaces, small ) }#{ $_index } {
    @if settings.$custom-properties {
      font-size: var(
        --text-size-small-#{$_index}-base
      ) !important;
    } @else {
      font-size: $size-value !important;
    }

    @if settings.$sizing-fluid != false {
      @if settings.$custom-properties {
        font-size: var(
          --text-size-small-#{$_index}
        ) !important;
      } @else {
        font-size: list.nth(
          $text-sizes-small-fluid,
          $_index
        ) !important;
      }
    }
  }
}
