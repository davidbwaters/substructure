//
//  Elements - Root Properties
//


@use 'sass:list';
@use 'sass:map';
@use 'sass:meta';
@use 'node_modules/@substructure/settings' as *;


@if $custom-properties != false {

  $_custom-properties: (
    text-size-normal: $text-size-normal,
    line-height-normal: $line-height-normal,
    line-height-large:  $line-height-large,
    sizing-root: $sizing-root,
    sizing-unit: $sizing-unit,
  );

  @each $key, $value in $breakpoint-sizes {

    $_custom-properties: map.merge(
      ( 
        #{ 'breakpoint-size-' + $key }: $value
      ),
      $_custom-properties
    )

  }

  @each $value in $sizing-factors {
    
    $_index: list.index(
      $sizing-factors,
      $value
    );
    
    $_custom-properties: map.merge(
      (
        #{ 'sizing-factor-' + $_index }: $value
      ),
      $_custom-properties
    )

  }

  @each $value in $spacing-sizes {
    
    $_index: list.index(
      $spacing-sizes,
      $value
    );
    
    $_custom-properties: map.merge(
      (
        #{ 'spacing-size-' + $_index }: $value
      ),
      $_custom-properties
    )

  }

  @each $value in $text-sizes-large {
    
    $_index: list.index(
      $text-sizes-large,
      $value
    );
    
    $_custom-properties: map.merge(
      (
        #{ 'text-size-large-' + $_index }: $value
      ),
      $_custom-properties
    )

  }

  @each $value in $text-sizes-small {
    
    $_index: list.index(
      $text-sizes-small,
      $value
    );
    
    $_custom-properties: map.merge(
      (
        #{ 'text-sizes-small-' + $_index }: $value
      ),
      $_custom-properties
    )

  }
  
  @each $key, $value in $layer-namespaces {
    
    $_custom-properties: map.merge(
      (
        #{ 'layer-namespace-' + $key }: $value
      ),
      $_custom-properties
    )

  }

  @if $text-sizing-fluid != false {
    
    @each $key, $value in $text-sizing-fluid {

      $_custom-properties: map.merge(
        (
          #{ 'text-sizing-fluid-' + $key }: $value
        ),
        $_custom-properties
      )
    }

  }

  @if meta.type-of($custom-properties) == map {
    
    $_custom-properties: map.merge(
      $_custom-properties,
      $custom-properties
    );

    :root {
    
      @each $key, $value in $_custom-properties {
        #{ '--' + $key }: #{ $value };
      }
  
    }

  }
  
  @if $custom-properties == true {
    
    :root {
    
      @each $key, $value in $_custom-properties {
        #{ '--' + $key }: #{ $value };
      }
  
    }

  }

}
