/*
 *  Elements - Root Properties√ü
 */


@use 'sass:list';
@use 'sass:map';
@use 'sass:meta';
@use '../settings';

@if settings.$custom-properties != false {
  $_custom-properties: ();

  @each $key, $value in settings.$breakpoint-sizes {
    $_custom-properties: map.merge(
      $_custom-properties,
      (#{'breakpoint-size-' + $key}: $value)
    );
  }

  $_custom-properties: map.merge(
    $_custom-properties,
    (
      sizing-root: settings.$sizing-root,
      sizing-unit: settings.$sizing-unit
    )
  );

  @each $value in settings.$sizing-factors {
    $_index: list.index(settings.$sizing-factors, $value);

    @if settings.$sizing-fluid != false {
      @each $key, $value in settings.$sizing-fluid {
        $_custom-properties: map.merge(
          $_custom-properties,
          (#{'sizing-fluid-' + $key}: $value)
        );
      }
    }

    $_custom-properties: map.merge(
      $_custom-properties,
      (#{'sizing-factor-' + $_index}: $value)
    );
  }

  @each $value in settings.$spacing-sizes {
    $_index: list.index(settings.$spacing-sizes, $value);

    $_custom-properties: map.merge(
      $_custom-properties,
      (#{'spacing-size-' + $_index + '-base'}: $value)
    );
  }

  @each $value in settings.$spacing-sizes-fluid {
    $_index: list.index(
      settings.$spacing-sizes-fluid,
      $value
    );

    $_custom-properties: map.merge(
      $_custom-properties,
      (#{'spacing-size-' + $_index}: $value)
    );
  }

  $_custom-properties: map.merge(
    $_custom-properties,
    (
      text-size-normal-base: settings.$text-size-normal-base
    )
  );

  @if settings.$sizing-fluid != false {
    $_custom-properties: map.merge(
      $_custom-properties,
      (
        text-size-normal: settings.$text-size-normal
      )
    );
  }

  @each $value in settings.$text-sizes-large {
    $_index: list.index(settings.$text-sizes-large, $value);

    $_custom-properties: map.merge(
      $_custom-properties,
      (#{'text-size-large-' + $_index + '-base'}: $value)
    );
  }

  @each $value in settings.$text-sizes-large {
    $_index: list.index(settings.$text-sizes-large, $value);

    @if settings.$sizing-fluid != false {
      $_custom-properties: map.merge(
        $_custom-properties,
        (
          #{'text-size-large-' +
            $_index}:
            list.nth(
              settings.$text-sizes-large-fluid,
              $_index
            )
        )
      );
    }
  }

  @each $value in settings.$text-sizes-small {
    $_index: list.index(settings.$text-sizes-small, $value);

    $_custom-properties: map.merge(
      $_custom-properties,
      (#{'text-size-small-' + $_index + '-base'}: $value)
    );
  }

  @each $value in settings.$text-sizes-small {
    $_index: list.index(settings.$text-sizes-small, $value);

    @if settings.$sizing-fluid != false {
      $_custom-properties: map.merge(
        $_custom-properties,
        (
          #{'text-size-small-' +
            $_index}:
            list.nth(
              settings.$text-sizes-small-fluid,
              $_index
            )
        )
      );
    }
  }

  $_custom-properties: map.merge(
    $_custom-properties,
    (
      line-height-normal: settings.$line-height-normal,
      line-height-large: settings.$line-height-large
    )
  );

  @if meta.type-of(settings.$custom-properties) == map {
    $_custom-properties: map.merge(
      $_custom-properties,
      settings.$custom-properties
    );

    $custom-properties: true;
  }

  $custom-properties: settings.$custom-properties;

  @if $custom-properties == true {
    $custom-properties: $_custom-properties;

    :root {
      @each $key, $value in $custom-properties {
        #{ '--' + $key }: #{$value};
      }
    }
  }
}
