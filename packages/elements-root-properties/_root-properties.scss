//
//  Elements - Root Properties
//


@use 'sass:list';
@use 'sass:map';
@use 'sass:meta';
@use '../settings' as *;


@if $custom-properties != false {

  $_custom-properties: ();

  @each $key, $value in $breakpoint-sizes {

    $_custom-properties: map.merge(
      $_custom-properties,
      (
        #{ 'breakpoint-size-' + $key }: $value
      )
    )

  }

  $_custom-properties: map.merge(
    $_custom-properties,
    (
      sizing-root: $sizing-root,
      sizing-unit: $sizing-unit,
    )
  );

  @each $value in $sizing-factors {

    $_index: list.index(
      $sizing-factors,
      $value
    );

    @if $sizing-fluid != false {

      @each $key, $value in $sizing-fluid {

        $_custom-properties: map.merge(
          $_custom-properties,
          (
            #{ 'sizing-fluid-' + $key }: $value
          )
        )
      }

    }

    $_custom-properties: map.merge(
      $_custom-properties,
      (
        #{ 'sizing-factor-' + $_index }: $value
      )
    )

  }

  @each $value in $spacing-sizes {

    $_index: list.index(
      $spacing-sizes,
      $value
    );

    $_custom-properties: map.merge(
      $_custom-properties,
      (
        #{ 'spacing-size-' + $_index + '-base'}: $value
      )
    )

  }

  @each $value in $spacing-sizes-fluid {

    $_index: list.index(
      $spacing-sizes-fluid,
      $value
    );

    $_custom-properties: map.merge(
      $_custom-properties,
      (
        #{ 'spacing-size-' + $_index}: $value
      )
    )

  }

  $_custom-properties: map.merge(
    $_custom-properties,
    (
      text-size-normal-base: $text-size-normal-base
    )
  );


  @if $sizing-fluid != false {

    $_custom-properties: map.merge(
      $_custom-properties,
      (
        text-size-normal: $text-size-normal
      )
    );

  }

  @each $value in $text-sizes-large {

    $_index: list.index(
      $text-sizes-large,
      $value
    );

    $_custom-properties: map.merge(
      $_custom-properties,
      (
        #{ 'text-size-large-' + $_index + '-base'}: $value,
      )
    )

  }

  @each $value in $text-sizes-small {

    $_index: list.index(
      $text-sizes-small,
      $value
    );

    $_custom-properties: map.merge(
      $_custom-properties,
      (
        #{ 'text-sizes-small-' + $_index + '-base'}: $value
      )
    );

  }

  @each $value in $text-sizes-large {

    $_index: list.index(
      $text-sizes-large,
      $value
    );

    @if $sizing-fluid != false {

      $_custom-properties: map.merge(
        $_custom-properties,
        (
          #{ 'text-size-large-' + $_index }: list.nth(
            $text-sizes-large-fluid, $_index
          )
        )
      )
    }

  }


  @each $value in $text-sizes-small {

    $_index: list.index(
      $text-sizes-small,
      $value
    );

    @if $sizing-fluid != false {

      $_custom-properties: map.merge(
        $_custom-properties,
        (
          #{ 'text-size-small-' + $_index }: list.nth(
            $text-sizes-large-fluid, $_index
          )
        )
      )
    }

  }

  $_custom-properties: map.merge(
    $_custom-properties,
    (
      line-height-normal: $line-height-normal,
      line-height-large:  $line-height-large
    )
  );


  @if meta.type-of($custom-properties) == map {

    $_custom-properties: map.merge(
      $_custom-properties,
      $custom-properties
    );

    $custom-properties: true;

  }


  @if $custom-properties == true {

    $custom-properties: $_custom-properties;

    :root {

      @each $key, $value in $custom-properties {
        #{ '--' + $key }: #{ $value };
      }

    }

  }

}
