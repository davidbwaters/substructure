/*
 *  Objects - Media
 */

// Object to place any image and text-like content 
// side-by-side


@use 'sass:map';
@use 'node_modules/@substructure/settings';
@use 'node_modules/@substructure/tools';


$spacing-default: settings.$sizing-unit !default;

$spacing-sizes: settings.$spacing-sizes !default;

$element-separator: '__' !default;

$modifier-separator: '--' !default;

$namespaces: () !default;

$namespaces: map.merge(
  (
    main: #{
      map-get(settings.$layer-namespaces, objects) +
      'media'
    },
    flush: 'flush'
  ),
  $namespaces
);


$_class: map.get( $namespaces, main );

$_class-image: #{ 
  $_class + $element-separator + 'image'
};

$_class-body: #{ 
  $_class + $element-separator + 'body'
};

$_class-flush: #{ 
  $_class + 
  $modifier-separator + 
  map.get( $namespaces, flush )
};

$_class-reverse: #{
  $_class + 
  $modifier-separator +
  'reverse'
};


// Base

.#{ $_class } {

  @include tools.clearfix();
  display: block;

}

.#{ $_class-image } {

  float: left;
  
  @include tools.spacing(
    'right', $spacing-default
  );

  > img {
    display: block;
  }

}

.#{ $_class-body } {

  display: block;
  overflow: hidden;

  &,
  > :last-child {
    margin-bottom: 0;
  }

}


// Variants

@each $size-name, $size-value in $spacing-sizes {

  .#{ $_class } {
    
    > .#{ $_class-image } {

      @include tools.spacing(
        'right', $size-value
      );
      
    }

    &.#{ $_class-reverse } {

      > .#{ $_class-image } {
        margin-right: 0;
        
        @include tools.spacing(
          'left', $size-value
        );

      }

    }

  }

}

.#{ $_class-reverse } {

  float: right;
  margin-right: 0;
  
  @include tools.spacing(
    left, $spacing-default
  );

}
